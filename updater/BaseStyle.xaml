<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:CoApp.Updater.Controls"
      >


    <Style TargetType="Image" x:Key="ShieldImage">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.RowSpan" Value="3"/>
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="Margin" Value="30,12,20,0"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Width" Value="48"/>
    </Style>


    <!--
    <Style TargetType="Controls:UnblockControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:UnblockControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding Title}" Grid.Column="1" VerticalAlignment="Center"/>

                        <TextBlock Text="Waiting On Unblock" x:Name="Waiting" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1" Visibility="Collapsed"/>
                        <Controls2:ElevateButton VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1" MustElevate="{TemplateBinding MustElevate}" Content="Unblock" 
                                                ElevatedCommand="{TemplateBinding ElevatedCommand}" UnelevatedCommand="{TemplateBinding UnelevatedCommand}" x:Name="ElevateButton"/>
                        <Button Style="{DynamicResource ChromelessLinkButtonStyle}" Content="An Error Occurred" 
                                Command="{TemplateBinding ShowError}" x:Name="ErrorButton" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{TemplateBinding WaitingOnUnblock}" Value="true">
                            <Setter Property="Visibility" TargetName="ElevateButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="ErrorButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="Waiting" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{TemplateBinding InError}" Value="true">
                            <Setter Property="Visibility" TargetName="ElevateButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="ErrorButton" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Waiting" Value="Collapsed"/>
                        </DataTrigger>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{TemplateBinding InError}" Value="false"/>
                                <Condition Binding="{TemplateBinding WaitingOnUnblock}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="ElevateButton" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ErrorButton" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="Waiting" Value="Collapsed"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
            
    </Style>-->

    <Style TargetType="{x:Type Controls:PrimaryViewControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:PrimaryViewControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Rectangle Grid.Column="0" Grid.RowSpan="2" Grid.Row="0">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="{Binding TopGradientColor, RelativeSource={RelativeSource TemplatedParent}}" Offset="0"/>
                                    <GradientStop Color="{Binding BottomGradientColor, RelativeSource={RelativeSource TemplatedParent}}" Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Image Style="{StaticResource ShieldImage}" Source="{Binding ImageSource, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <TextBlock Style="{StaticResource CoAppUpdateInnerHeader}" Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter Content="{TemplateBinding Content}" Grid.Column="2" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>