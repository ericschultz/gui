<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:Controls2="clr-namespace:CoApp.Gui.Toolkit.Controls"
                    xmlns:Converters1="clr-namespace:CoApp.Gui.Toolkit.Support.Converters"
                    xmlns:Support="clr-namespace:CoApp.Gui.Toolkit.Support"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                    xmlns:Views1="clr-namespace:CoApp.Gui.Toolkit.Views"
                    xmlns:ViewModels="clr-namespace:CoApp.Gui.Toolkit.ViewModels"
                    xmlns:ProgressBar="clr-namespace:CoApp.Gui.Toolkit.Support.Converters.ProgressBar">
    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Converters1:NullEmptyStringToVisibilityConverter x:Key="NullEmptyStringToVisibilityConverter1"/>
    <BooleanToVisibilityConverter x:Key="boolToVisConverter"/>

    <Converters1:InvertBooleanConverter x:Key="invertConverter"/>
    <Style TargetType="{x:Type Border}" x:Key="BorderStyle">
        <Setter Property="BorderBrush" Value="#FFB2B2B2"/>
        <Setter  Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,20"   />
    </Style>
    <Style TargetType="{x:Type TextBlock}" x:Key="Title">
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40 "/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas>
                        <!-- fill is needed so the click is actually caught in the transparent regions -->
                        <Ellipse Width="40" Height="40" Stroke="Black" Fill="Transparent"/>

                        <Canvas Width="40" Height="40" Canvas.Left="20.667" Canvas.Top="27.5" >

                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="0.40" ScaleX="0.40"/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="179.547"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path Fill="Black" StrokeThickness="1"  StrokeMiterLimit="10" StrokeLineJoin="Round" Data="F1 M0.64426238,10.744088 L49.318571,11.101961 49.281571,17.092961 0.5,17.310553 0.64426238,10.744088 z M32.893571,0.91696081 L55.254571,14.135961 32.720571,27.061961 32.720571,27.061961 C31.280571,27.884961 29.441571,27.390961 28.616571,25.959961 27.791571,24.521961 28.286571,22.694961 29.726571,21.862961 L29.726571,21.862961 47.802571,11.497961 47.772571,16.673961 29.832571,6.0759608 29.832571,6.0759608 C28.406571,5.2299608 27.934571,3.3949608 28.781571,1.9719608 29.621571,0.54296081 31.467571,0.077960811 32.893571,0.91696081 L32.893571,0.91696081 z" Height="50.995" Canvas.Left="-25.224" Canvas.Top="-4.992" Width="60.559" Stretch="Fill"/>
                            <Canvas/>
                            <Canvas/>
                        </Canvas>


                    </Canvas>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Color x:Key="Windows8DialogButtonBg">#FF008287</Color>
    <SolidColorBrush x:Key="Windows8DialogButtonBgBrush" Color="{StaticResource Windows8DialogButtonBg}"/>

    <Color x:Key="Windows8DisabledButtonFg">#FF9D9D9D</Color>
    <SolidColorBrush x:Key="Windows8DisabledButtonFgBrush" Color="{StaticResource Windows8DisabledButtonFg}"/>

    <Color x:Key="Windows8DisabledButtonBg">#FFEAEAEA</Color>
    <SolidColorBrush x:Key="Windows8DisabledButtonBgBrush" Color="{StaticResource Windows8DisabledButtonBg}"/>

    <Color x:Key="Windows8DialogButtonFg">#FFEDF7F7</Color>
    <SolidColorBrush x:Key="Windows8DialogButtonFgBrush" Color="{StaticResource Windows8DialogButtonFg}"/>

    <Color x:Key="Windows8DialogButtonOverBg">#FF219297</Color>
    <SolidColorBrush x:Key="Windows8DialogButtonOverBgBrush" Color="{StaticResource Windows8DialogButtonOverBg}"/>

    <Style x:Key="Windows8DialogButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="Background" Value="{StaticResource Windows8DialogButtonBgBrush}" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource Windows8DialogButtonFgBrush}" />
        <Setter Property="Padding" Value="29,12" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusRectangleBlack">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusRectangleWhite">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="{x:Null}" TextBlock.FontSize="21"  SnapsToDevicePixels="True"/>
                        </Border>
                        <Rectangle Margin="4" Fill="{x:Null}" StrokeThickness="1" Stroke="White" SnapsToDevicePixels="True" x:Name="FocusRectangleWhite" Opacity="0"/>
                        <Rectangle x:Name="FocusRectangleBlack" Margin="4" Fill="{x:Null}" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 1" SnapsToDevicePixels="True" Opacity="0"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Windows8DisabledButtonFgBrush}" />
                            <Setter Property="Background" Value="{StaticResource Windows8DisabledButtonBgBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource BlackBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Windows8DialogButtonOverBgBrush}"/>
                        </Trigger>



                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Color x:Key="Windows8ButtonBg1">#FFCCCCCC</Color>
    <SolidColorBrush x:Key="Windows8ButtonBgBrush1" Color="{DynamicResource Windows8ButtonBg1}" />

    <Color x:Key="Windows8ButtonOverBg">#FFD8D8D8</Color>
    <SolidColorBrush x:Key="Windows8ButtonOverBgBrush" Color="{DynamicResource Windows8ButtonOverBg}" />

    <SolidColorBrush x:Key="MyWhiteBrush">#FFFFFFFF</SolidColorBrush>

    <Style x:Key="Windows8ButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Background" Value="{StaticResource Windows8ButtonBgBrush1}" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Padding" Value="29,12" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusRectangleBlack">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusRectangleWhite">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="{x:Null}" TextBlock.FontSize="{TemplateBinding FontSize}"  SnapsToDevicePixels="True" 
                                              />
                        </Border>
                        <Rectangle Margin="4" Fill="{x:Null}" StrokeThickness="1" Stroke="White" SnapsToDevicePixels="True" x:Name="FocusRectangleWhite" Opacity="0"/>
                        <Rectangle x:Name="FocusRectangleBlack" Margin="4" Fill="{x:Null}" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 1" SnapsToDevicePixels="True" Opacity="0"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Windows8DisabledButtonFgBrush}" />
                            <Setter Property="Background" Value="{DynamicResource Windows8DisabledButtonBgBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Windows8ButtonOverBgBrush}"/>

                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource MyWhiteBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource BlackBrush}"/>

                        </Trigger>





                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style BasedOn="{StaticResource Windows8ButtonStyle}" TargetType="Button"/>



    <Style BasedOn="{StaticResource Windows8ButtonStyle}" TargetType="Controls2:ElevateButton" x:Key="Windows8ElevateButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls2:ElevateButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <!--
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Windows8ButtonOverBgBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                        <!--
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)" Storyboard.TargetName="MouseOverBorder">
                                                <EasingThicknessKeyFrame KeyTime="0" Value="2"/>
                                            </ThicknessAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <!--
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource BlackBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource WhiteBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <!--
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Windows8DisabledButtonBgBrush}"	/>
                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusRectangleBlack">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusRectangleWhite">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}">
                            <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}" >
                                <Controls2:ElevateShield Margin="0,0,10,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{TemplateBinding MustElevate, Converter={StaticResource boolToVisConverter}}"/>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                  Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  
                                                  TextBlock.FontSize="21"  SnapsToDevicePixels="True" />
                            </StackPanel>
                        </Border>
                        <Rectangle Margin="4" Fill="{x:Null}" StrokeThickness="1" Stroke="White" SnapsToDevicePixels="True" x:Name="FocusRectangleWhite" Opacity="0"/>
                        <Rectangle x:Name="FocusRectangleBlack" Margin="4" Fill="{x:Null}" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 1" SnapsToDevicePixels="True" Opacity="0"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Windows8DisabledButtonFgBrush}" />
                            <Setter Property="Background" Value="{DynamicResource Windows8DisabledButtonBgBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource Windows8ButtonOverBgBrush}"/>

                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource MyWhiteBrush}"/>
                            <Setter Property="Background" Value="{DynamicResource BlackBrush}"/>

                        </Trigger>

                        <DataTrigger Binding="{Binding MustElevate, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                            <Setter Property="Command" Value="{Binding UnelevatedCommand, RelativeSource={x:Static RelativeSource.Self}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MustElevate, RelativeSource={x:Static RelativeSource.Self}}" Value="False">
                            <Setter Property="Command" Value="{Binding ElevatedCommand, RelativeSource={x:Static RelativeSource.Self}}"/>
                        </DataTrigger>



                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style BasedOn="{StaticResource Windows8ElevateButtonStyle}" TargetType="Controls2:ElevateButton" x:Key="Windows8DialogElevateButtonStyle">
        <Setter Property="Background" Value="{StaticResource Windows8DialogButtonBgBrush}" />
        <Setter Property="Foreground" Value="{StaticResource Windows8DialogButtonFgBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls2:ElevateButton}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusRectangleBlack">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusRectangleWhite">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidFocused"/>
                                <VisualState x:Name="InvalidUnfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="PART_Background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">

                            <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}"  VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Controls2:ElevateShield Margin="0,0,10,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="{TemplateBinding MustElevate, Converter={StaticResource boolToVisConverter}}"/>
                                <ContentPresenter x:Name="contentPresenter"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" OpacityMask="{x:Null}" TextBlock.FontSize="21"  SnapsToDevicePixels="True" TextBlock.Foreground="{TemplateBinding Foreground}"/>
                            </StackPanel>
                        </Border>
                        <Rectangle Margin="4" Fill="{x:Null}" StrokeThickness="1" Stroke="White" SnapsToDevicePixels="True" x:Name="FocusRectangleWhite" Opacity="0"/>
                        <Rectangle x:Name="FocusRectangleBlack" Margin="4" Fill="{x:Null}" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 1" SnapsToDevicePixels="True" Opacity="0"/>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Windows8DisabledButtonFgBrush}" />
                            <Setter Property="Background" Value="{StaticResource Windows8DisabledButtonBgBrush}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{StaticResource Windows8DialogButtonOverBgBrush}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource BlackBrush}"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding MustElevate, RelativeSource={x:Static RelativeSource.Self}}" Value="True">
                            <Setter Property="Command" Value="{Binding UnelevatedCommand, RelativeSource={x:Static RelativeSource.Self}}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MustElevate, RelativeSource={x:Static RelativeSource.Self}}" Value="False">
                            <Setter Property="Command" Value="{Binding ElevatedCommand, RelativeSource={x:Static RelativeSource.Self}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource Windows8ElevateButtonStyle}" TargetType="Controls2:ElevateButton"/>



    <Style TargetType="{x:Type Controls2:DialogBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls2:DialogBox}">
                    <Grid Background="#B15A5A5A">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="400"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto" MinHeight="215"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid Background="White" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="680"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.Resources>
                                        <DataTemplate DataType="{x:Type Controls2:ElevateButtonDescription}">
                                            <Controls2:ElevateButton UnelevatedCommand="{Binding Command}" CommandParameter="{Binding CommandParameter}" CommandTarget="{Binding CommandTarget}" Content="{Binding Title}" Margin="20,0,0,0" MustElevate="True" HorizontalAlignment="Right" Style="{StaticResource Windows8DialogElevateButtonStyle}" VerticalAlignment="Bottom"/>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type Controls2:ButtonDescription}">
                                            <Button Content="{Binding Title}" Command="{Binding Command}" CommandParameter="{Binding CommandParameter}" CommandTarget="{Binding CommandTarget}" Margin="20,0,0,0" HorizontalAlignment="Right" Style="{StaticResource Windows8DialogButtonStyle}" VerticalAlignment="Bottom" IsCancel="{Binding IsCancel}"/>
                                        </DataTemplate>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Style="{DynamicResource Title}" Padding="0,20, 0, 20 " Text="{TemplateBinding Title}"/>
                                    <ContentControl Content="{TemplateBinding Content}"  Grid.Row="1" FontFamily="{DynamicResource HeaderFontFamily}" FontSize="18" >
                                        <ContentControl.Resources>
                                            <DataTemplate DataType="{x:Type System:String}">
                                                <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type Support:StringList}">
                                                <ItemsControl ItemsSource="{Binding}"/>
                                            </DataTemplate>
                                        </ContentControl.Resources>
                                    </ContentControl>

                                    <TextBlock TextWrapping="Wrap"  Grid.Row="1" FontFamily="{DynamicResource HeaderFontFamily}" FontSize="18" Text="{TemplateBinding Content}"/>
                                    <ItemsControl Grid.Row="2" ItemsSource="{TemplateBinding ButtonDescriptions}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0, 30, 0, 30" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                            </Grid>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ChromelessLinkButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Background"
                Value="#02FFFFFF" />
        <Setter Property="Foreground"
                Value="Blue" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="TextBlock.TextDecorations" Value="None"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"
                                           >
                            <ContentPresenter.Resources>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="TextDecorations" Value="None" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="TextDecorations" Value="Underline"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="WinLayout_HeaderGrid" TargetType="Grid">
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    
    
    <Style x:Key="WinLayout_HeaderStackPanel" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource HeaderFontFamily}"/>
        
    </Style>
    <Style x:Key="WinLayout_HeaderSettingButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
        <Setter Property="Content" Value="Settings"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,0,20,0"/>
    </Style>
    
    <Style x:Key="WinLayout_HeaderUIButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ChromelessButtonStyle}">
        <Setter Property="FontFamily" Value="Marlett"/>
    </Style>
    
    <Style x:Key="WinLayout_HeaderUIButton_Minimize" TargetType="{x:Type Button}" BasedOn="{StaticResource WinLayout_HeaderUIButton}">
        <Setter Property="Content" Value="0"/>
    </Style>
    
    <Style x:Key="WinLayout_HeaderUIButton_MaxRestore" TargetType="{x:Type Button}" BasedOn="{StaticResource WinLayout_HeaderUIButton}">
        <Setter Property="Content" Value="1"/>
    </Style>
    
    <Style x:Key="WinLayout_HeaderUIButton_Close" TargetType="{x:Type Button}" BasedOn="{StaticResource WinLayout_HeaderUIButton}">
        <Setter Property="Content" Value="r"/>
    </Style>
    
    <Style x:Key="WinLayout_InnerTitle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Title}">
        <Setter Property="Grid.Column" Value="0"/>
        <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Text" Value="{Binding ElementName=NavFrame, Path=Content.Title}"/>
    </Style>
    
    <Style x:Key="WinLayout_SubTitle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Title}">
        <Setter Property="Text" Value="{Binding ElementName=NavFrame, Path=Content.SubTitle}"/>
        <Setter Property="Visibility" Value="{Binding ElementName=NavFrame, Path=Content.SubTitle, Converter={StaticResource NullEmptyStringToVisibilityConverter1}}"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}"/>
    </Style>
    
    
    
    
    <Style x:Key="WinLayout_CoAppFrame" TargetType="{x:Type Controls2:CoAppFrame}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0,0,10, 0"/>

        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Style.Triggers>
            <!--
            <DataTrigger Binding="{Binding DataContext.ScreenWidth}" Value="Standard">
               
            </DataTrigger>-->
            <DataTrigger Binding="{Binding MainScreenViewModel.ScreenWidth}" Value="FullWidth">
                <Setter Property="Grid.Row" Value="1"/>
                <Setter Property="Grid.Column" Value="0"/>
                <Setter Property="Grid.ColumnSpan" Value="2"/>
               
            </DataTrigger>
        </Style.Triggers>
        
    </Style>

    <Style x:Key="WinLayout_CoAppFrameStandard" BasedOn="{StaticResource WinLayout_CoAppFrame}" TargetType="{x:Type Controls2:CoAppFrame}">
        
    </Style>
    
    
    <Style x:Key="WinLayout_CoAppFrameFullWidth" BasedOn="{StaticResource WinLayout_CoAppFrame}" TargetType="{x:Type Controls2:CoAppFrame}">
        
    </Style>
    
    <!--
    <Style TargetType="Controls2:CoAppWindow">
        <Setter Property="MinHeight" Value="800"/>
        <Setter Property="Support:SupplementaryInteraction.Behaviors" Value="{StaticResource WindowBehaviors}"/>
        <Setter Property="Template">
            <Setter.Value>
                
                <ControlTemplate TargetType="Controls2:CoAppWindow">
                    <Grid x:Name="LayoutRoot" Support:StateManager.VisualStateProperty="{Binding DialogBoxVisualState}">
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="MainStates">
                                <VisualState Name="Base"/>

                                <VisualState Name="Showing">
                                    <Storyboard Duration="00:00:00.25">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingGrid" Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="0"  Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation To="1" Storyboard.TargetName="LoadingGrid" Storyboard.TargetProperty="Opacity" Duration="00:00:00.25"/>


                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Base" From="Showing">
                                        <Storyboard Duration="00:00:00.25">

                                            <DoubleAnimation To="0" Storyboard.TargetName="LoadingGrid" Storyboard.TargetProperty="Opacity" Duration="00:00:00.25"/>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingGrid" Duration="0" BeginTime="00:00:00.2499999">
                                                <DiscreteObjectKeyFrame KeyTime="0"  Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition To="Showing"/>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>




                        <Grid Grid.Row="0" x:Name="Header" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">

                            <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Orientation="Horizontal" TextElement.FontFamily="{DynamicResource HeaderFontFamily}">

                                <Button x:Name="ShowSettings" Content="Settings" Style="{DynamicResource ChromelessButtonStyle}" FontSize="15" FontWeight="Bold" Margin="0,0,20,0" Command="{Binding Settings}"/>

                                <Button x:Name="Minimize"  Style="{DynamicResource ChromelessButtonStyle}" Content="0" FontFamily="Marlett"/>
                                <Button  x:Name="MaxRestore" Style="{DynamicResource ChromelessButtonStyle}" Content="1" FontFamily="Marlett" >

                                </Button>
                                <Button x:Name="TryClose" Style="{DynamicResource ChromelessButtonStyle}" Content="r" FontFamily="Marlett"  Command="{Binding Shutdown}"/>
                            </StackPanel>
                        </Grid>


                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="122"/>
                                <ColumnDefinition MinWidth="880"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="122"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Button x:Name="BackButton" Style="{StaticResource BackButtonStyle}" Grid.Column="0" Grid.Row="0" Visibility="{Binding Path=CanGoBack, Converter={StaticResource boolToVisConverter}}" Command="{Binding Back}"/>

                            <Grid Grid.Column="1" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="400"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="InnerTitle" Text="{Binding ElementName=NavFrame, Path=Content.Title}" Style="{StaticResource Title}" Grid.Column="0" FontFamily="{DynamicResource HeaderFontFamily}" Grid.ColumnSpan="2"/>
                                <TextBlock x:Name="SectionTitle" Text="{Binding ElementName=NavFrame, Path=Content.SubTitle}" Style="{StaticResource Title}" Grid.Column="1" FontFamily="{DynamicResource HeaderFontFamily}" Visibility="{Binding ElementName=NavFrame, Path=Content.SubTitle, Converter={StaticResource NullEmptyStringToVisibilityConverter1}}"/>
                            </Grid>

                            <Controls2:CoAppFrame  Grid.Row="1" Grid.Column="1" x:Name="NavFrame"
               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0,0,10, 0" Content="{Binding MainScreenViewModel}" >

                                <Controls2:CoAppFrame.Resources>
                                    <ResourceDictionary>
                                        <DataTemplate DataType="{x:Type ViewModels:SettingsViewModel}">
                                            <Views1:SettingsView/>
                                        </DataTemplate>
                                    </ResourceDictionary>
                                </Controls2:CoAppFrame.Resources>
                           
                                    
                                
                    
                   
                            </Controls2:CoAppFrame>

                        </Grid>
                        <Grid Grid.Row="0" Grid.RowSpan="2" x:Name="LoadingGrid" Visibility="Collapsed" Opacity="0">

                            <Controls2:DialogBox DataContext="{Binding DialogBoxInfo}" Title="{Binding Title}"  Content="{Binding Content}" ButtonDescriptions="{Binding Buttons}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

       

    
 
    <ProgressBar:WidthToContainerAnimationStartPositionConverter x:Key="ContainerAnimationStartPositionConverter"/>
    <ProgressBar:WidthToContainerAnimationEndPositionConverter x:Key="ContainerAnimationEndPositionConverter"/>
    <ProgressBar:WidthToEllipseAnimationWellPositionConverter x:Key="EllipseAnimationWellPositionConverter"/>
    <ProgressBar:WidthToEllipseAnimationEndPositionConverter x:Key="EllipseAnimationEndPositionConverter"/>
    <ProgressBar:WidthToEllipseOffsetConverter x:Key="EllipseOffsetConverter"/>
    <ProgressBar:WidthToEllipseDiameterConverter x:Key="EllipseDiameterConverter"/>
    
    <Style x:Key="ProgressBarStyle1" TargetType="ProgressBar">
        <Setter Property="Foreground" Value="#FF008287"/>
        <Setter Property="Background" Value="#59FFFFFF"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="MinHeight" Value="6"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <!--<VisualStateGroup.Transitions>
                                    
                                    <VisualTransition From="Updating" To="Determinate">
                                        <Storyboard>
                                            <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.IndicatorLengthDelta, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="ProgressBarIndicator"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Paused" To="Determinate">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.25" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Indeterminate">
                                        <Storyboard>
                                            <FadeInThemeAnimation Storyboard.TargetName="DeterminateRoot"/>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>-->
                                <VisualState x:Name="Determinate"/>
                                <!--<VisualState x:Name="Updating"/>-->
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Duration="0:0:3.917" 
                                                         From="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ContainerAnimationStartPositionConverter}}"  
                                                         To="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ContainerAnimationEndPositionConverter}}" 
                                                         Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="EllipseGrid"/>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationEndPositionConverter}}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.167" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.167" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationEndPositionConverter}}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E3">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.333" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.333" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationEndPositionConverter}}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E4">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.5" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.5" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationEndPositionConverter}}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="E5">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:1.667" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationWellPositionConverter}}"/>
                                            <SplineDoubleKeyFrame KeySpline="0.4,0,0.6,1" KeyTime="0:0:3.667" Value="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseAnimationEndPositionConverter}}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="100"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.167" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="100"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B3">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.833" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.333" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="100"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B4">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="100"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="B5">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1.167" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2.667" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="100"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="EllipseGrid"/>
                                        <!--<FadeOutThemeAnimation Storyboard.TargetName="DeterminateRoot"/>-->
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DeterminateRoot"/>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E1">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E2">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.167" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.167" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E3">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.333" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.333" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E4">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="E5">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.667" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:3.667" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <!--
                                <VisualState x:Name="Error">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Paused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.25" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ProgressBarIndicator"/>
                                    </Storyboard>
                                </VisualState>-->
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="EllipseGrid" Opacity="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RenderTransform>
                                <TranslateTransform/>
                            </Grid.RenderTransform>
                            <Border x:Name="B1" Grid.Column="8" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform/>
                                </Border.RenderTransform>
                                <Ellipse x:Name="E1" Fill="{TemplateBinding Foreground}" Height="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}" RenderTransformOrigin="0.5,0.5" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="7" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseOffsetConverter}}"/>
                            <Border x:Name="B2" Grid.Column="6" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform/>
                                </Border.RenderTransform>
                                <Ellipse x:Name="E2" Fill="{TemplateBinding Foreground}" Height="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}" RenderTransformOrigin="0.5,0.5" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="5" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseOffsetConverter}}"/>
                            <Border x:Name="B3" Grid.Column="4" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform/>
                                </Border.RenderTransform>
                                <Ellipse x:Name="E3" Fill="{TemplateBinding Foreground}" Height="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}" RenderTransformOrigin="0.5,0.5" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="3" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseOffsetConverter}}"/>
                            <Border x:Name="B4" Grid.Column="2" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform/>
                                </Border.RenderTransform>
                                <Ellipse x:Name="E4" Fill="{TemplateBinding Foreground}" Height="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}" RenderTransformOrigin="0.5,0.5" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                            <Rectangle Grid.Column="1" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseOffsetConverter}}"/>
                            <Border x:Name="B5" Grid.Column="0" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TranslateTransform/>
                                </Border.RenderTransform>
                                <Ellipse x:Name="E5" Fill="{TemplateBinding Foreground}" Height="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}" RenderTransformOrigin="0.5,0.5" Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EllipseDiameterConverter}}">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform/>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Border>
                        </Grid>
                        <Border x:Name="DeterminateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <Rectangle x:Name="ProgressBarIndicator" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>