<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:Controls2="clr-namespace:CoApp.Gui.Toolkit.Controls"
                    xmlns:Converters1="clr-namespace:CoApp.Gui.Toolkit.Support.Converters"
                    xmlns:Support="clr-namespace:CoApp.Gui.Toolkit.Support"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
                    xmlns:Views1="clr-namespace:CoApp.Gui.Toolkit.Views"
                    xmlns:ViewModels="clr-namespace:CoApp.Gui.Toolkit.ViewModels">
    <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Converters1:NullEmptyStringToVisibilityConverter x:Key="NullEmptyStringToVisibilityConverter1"/>
    <BooleanToVisibilityConverter x:Key="boolToVisConverter"/>

    <Converters1:InvertBooleanConverter x:Key="invertConverter"/>
    <Style TargetType="{x:Type TextBlock}" x:Key="Title">
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"/>
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">

        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40 "/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas>
                        <!-- fill is needed so the click is actually caught in the transparent regions -->
                        <Ellipse Width="40" Height="40" Stroke="Black" Fill="Transparent"/>

                        <Canvas Width="40" Height="40" Canvas.Left="20.667" Canvas.Top="27.5" >

                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="0.40" ScaleX="0.40"/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="179.547"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path Fill="Black" StrokeThickness="1"  StrokeMiterLimit="10" StrokeLineJoin="Round" Data="F1 M0.64426238,10.744088 L49.318571,11.101961 49.281571,17.092961 0.5,17.310553 0.64426238,10.744088 z M32.893571,0.91696081 L55.254571,14.135961 32.720571,27.061961 32.720571,27.061961 C31.280571,27.884961 29.441571,27.390961 28.616571,25.959961 27.791571,24.521961 28.286571,22.694961 29.726571,21.862961 L29.726571,21.862961 47.802571,11.497961 47.772571,16.673961 29.832571,6.0759608 29.832571,6.0759608 C28.406571,5.2299608 27.934571,3.3949608 28.781571,1.9719608 29.621571,0.54296081 31.467571,0.077960811 32.893571,0.91696081 L32.893571,0.91696081 z" Height="50.995" Canvas.Left="-25.224" Canvas.Top="-4.992" Width="60.559" Stretch="Fill"/>
                            <Canvas/>
                            <Canvas/>
                        </Canvas>


                    </Canvas>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Controls2:DialogBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls2:DialogBox}">
                    <Grid Background="#B15A5A5A">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="400"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto" MinHeight="215"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Grid Background="White" Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="680"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.Resources>
                                        <DataTemplate DataType="{x:Type Controls2:ElevateButtonDescription}">
                                            <Controls2:ElevateButton UnelevatedCommand="{Binding Command}" CommandParameter="{Binding CommandParameter}" CommandTarget="{Binding CommandTarget}" Content="{Binding Title}" Margin="20,0,0,0" MustElevate="True" HorizontalAlignment="Right" Style="{StaticResource Windows8DialogElevateButtonStyle}" VerticalAlignment="Bottom"/>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type Controls2:ButtonDescription}">
                                            <Button Content="{Binding Title}" Command="{Binding Command}" CommandParameter="{Binding CommandParameter}" CommandTarget="{Binding CommandTarget}" Margin="20,0,0,0" HorizontalAlignment="Right" Style="{StaticResource Windows8DialogButtonStyle}" VerticalAlignment="Bottom" IsCancel="{Binding IsCancel}"/>
                                        </DataTemplate>
                                    </Grid.Resources>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Style="{DynamicResource Title}" Padding="0,20, 0, 20 " Text="{TemplateBinding Title}"/>
                                    <ContentControl Content="{TemplateBinding Content}"  Grid.Row="1" FontFamily="{DynamicResource HeaderFontFamily}" FontSize="18" >
                                        <ContentControl.Resources>
                                            <DataTemplate DataType="{x:Type System:String}">
                                                <TextBlock TextWrapping="Wrap" Text="{Binding}"/>
                                            </DataTemplate>
                                            <DataTemplate DataType="{x:Type Support:StringList}">
                                                <ItemsControl ItemsSource="{Binding}"/>
                                            </DataTemplate>
                                        </ContentControl.Resources>
                                    </ContentControl>

                                    <TextBlock TextWrapping="Wrap"  Grid.Row="1" FontFamily="{DynamicResource HeaderFontFamily}" FontSize="18" Text="{TemplateBinding Content}"/>
                                    <ItemsControl Grid.Row="2" ItemsSource="{TemplateBinding ButtonDescriptions}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0, 30, 0, 30" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                            </Grid>
                        </Grid>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Support:Behaviors x:Shared="False" x:Key="WindowBehaviors">
        <Behaviours:BorderlessWindowBehavior/>
    </Support:Behaviors>
    
    <Style TargetType="Controls2:CoAppWindow">
        <Setter Property="MinHeight" Value="800"/>
        <Setter Property="Support:SupplementaryInteraction.Behaviors" Value="{StaticResource WindowBehaviors}"/>
        <Setter Property="Template">
            <Setter.Value>
                
                <ControlTemplate TargetType="Controls2:CoAppWindow">
                    <Grid x:Name="LayoutRoot" Support:StateManager.VisualStateProperty="{Binding DialogBoxVisualState}">
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="MainStates">
                                <VisualState Name="Base"/>

                                <VisualState Name="Showing">
                                    <Storyboard Duration="00:00:00.25">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingGrid" Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="0"  Value="{x:Static Visibility.Visible}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation To="1" Storyboard.TargetName="LoadingGrid" Storyboard.TargetProperty="Opacity" Duration="00:00:00.25"/>


                                    </Storyboard>
                                </VisualState>
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Base" From="Showing">
                                        <Storyboard Duration="00:00:00.25">

                                            <DoubleAnimation To="0" Storyboard.TargetName="LoadingGrid" Storyboard.TargetProperty="Opacity" Duration="00:00:00.25"/>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LoadingGrid" Duration="0" BeginTime="00:00:00.2499999">
                                                <DiscreteObjectKeyFrame KeyTime="0"  Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition To="Showing"/>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>




                        <Grid Grid.Row="0" x:Name="Header" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent">

                            <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Orientation="Horizontal" TextElement.FontFamily="{DynamicResource HeaderFontFamily}">

                                <Button x:Name="ShowSettings" Content="Settings" Style="{DynamicResource ChromelessButtonStyle}" FontSize="15" FontWeight="Bold" Margin="0,0,20,0" Command="{Binding Settings}"/>

                                <Button x:Name="Minimize"  Style="{DynamicResource ChromelessButtonStyle}" Content="0" FontFamily="Marlett"/>
                                <Button  x:Name="MaxRestore" Style="{DynamicResource ChromelessButtonStyle}" Content="1" FontFamily="Marlett" >

                                </Button>
                                <Button x:Name="TryClose" Style="{DynamicResource ChromelessButtonStyle}" Content="r" FontFamily="Marlett"  Command="{Binding Shutdown}"/>
                            </StackPanel>
                        </Grid>


                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="122"/>
                                <ColumnDefinition MinWidth="880"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="122"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Button x:Name="BackButton" Style="{StaticResource BackButtonStyle}" Grid.Column="0" Grid.Row="0" Visibility="{Binding Path=CanGoBack, Converter={StaticResource boolToVisConverter}}" Command="{Binding Back}"/>

                            <Grid Grid.Column="1" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="400"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="InnerTitle" Text="{Binding ElementName=NavFrame, Path=Content.Title}" Style="{StaticResource Title}" Grid.Column="0" FontFamily="{DynamicResource HeaderFontFamily}" Grid.ColumnSpan="2"/>
                                <TextBlock x:Name="SectionTitle" Text="{Binding ElementName=NavFrame, Path=Content.SubTitle}" Style="{StaticResource Title}" Grid.Column="1" FontFamily="{DynamicResource HeaderFontFamily}" Visibility="{Binding ElementName=NavFrame, Path=Content.SubTitle, Converter={StaticResource NullEmptyStringToVisibilityConverter1}}"/>
                            </Grid>
<!--
                            <Controls2:CoAppFrame  Grid.Row="1" Grid.Column="1" x:Name="NavFrame"
               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="0,0,10, 0" Content="{Binding MainScreenViewModel}" >

                                <Controls2:CoAppFrame.Resources>
                                    <ResourceDictionary>
                                        <DataTemplate DataType="{x:Type ViewModels:SettingsViewModel}">
                                            <Views1:SettingsView/>
                                        </DataTemplate>
                                    </ResourceDictionary>
                                </Controls2:CoAppFrame.Resources>
                           
                                    
                                
                    
                   
                            </Controls2:CoAppFrame>-->

                        </Grid>
                        <Grid Grid.Row="0" Grid.RowSpan="2" x:Name="LoadingGrid" Visibility="Collapsed" Opacity="0">

                            <Controls2:DialogBox DataContext="{Binding DialogBoxInfo}" Title="{Binding Title}"  Content="{Binding Content}" ButtonDescriptions="{Binding Buttons}"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>